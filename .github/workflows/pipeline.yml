name: Pipeline CI/CD

on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'Imagem Docker que deseja publicar no Registry'
        required: true
        type: choice
        options:
          - terraform
      tag:
        description: 'Tag para a imagem Docker (padr√£o: latest)'
        required: false
        default: 'latest'
        type: string

jobs:
  Build:
    runs-on: ubuntu-latest
    container:
      image: docker:latest
    #   credentials:
    #     username: ${{ secrets.AZURE_USER }}
    #     password: ${{ secrets.AZURE_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build image
        run: |
          docker build -t devopseasybr/${{ inputs.folder }}:${{ inputs.tag }} -f ${{ inputs.folder }}/Dockerfile ${{ inputs.folder }}
      - name: Save image
        run: |
          docker save devopseasybr/${{ inputs.folder }}:${{ inputs.tag }} -o ${{ inputs.folder }}.tar
          chmod 644 ${{ inputs.folder }}.tar
      - name: Remove image
        run: |
          docker rmi devopseasybr/${{ inputs.folder }}:${{ inputs.tag }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image
          path: |
            ${{ inputs.folder }}.tar

  Test:
    runs-on: ubuntu-latest
    needs: [Build]
    container:
      image: devopseasybr/trivy:0.61.0
    #   credentials:
    #     username: ${{ secrets.AZURE_USER }}
    #     password: ${{ secrets.AZURE_PASSWORD }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: image
      - name: Load image
        run: |
          docker image load -i ${{ inputs.folder }}.tar
      - name: Grype image
        run: |
          grype devopseasybr/${{ inputs.folder }}:${{ inputs.tag }}
      - name: Remove image
        run: |
          docker rmi devopseasybr/${{ inputs.folder }}:${{ inputs.tag }}

  Deploy:
    runs-on: ubuntu-latest
    needs: [Test]
    container:
      image: docker:latest
      credentials:
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: image
      - name: Load image
        run: |
          docker image load -i ${{ inputs.folder }}.tar
      - name: Login Azure Container Registry
        run: |
          echo "${{ secrets.PASSWORD }}" | docker login ${{ secrets.REGISTRY }} \
          -u ${{ secrets.USER }} --password-stdin
      - name: Publish image
        run: |
          docker push ${{ secrets.REGISTRY }}/devops/${{ inputs.folder }}:${{ inputs.tag }}
      - name: Remove image
        run: |
          docker rmi ${{ secrets.REGISTRY }}/devops/${{ inputs.folder }}:${{ inputs.tag }}
